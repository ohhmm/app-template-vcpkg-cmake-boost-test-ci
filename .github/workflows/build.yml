name: Build and Test

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Cache vcpkg
      uses: actions/cache@v4
      with:
        path: |
          ${{github.workspace}}/vcpkg
          !${{github.workspace}}/vcpkg/buildtrees
          !${{github.workspace}}/vcpkg/packages
          !${{github.workspace}}/vcpkg/downloads
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build
        cmake --version
        ninja --version
        gcc --version
        g++ --version

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      env:
        VCPKG_PYTHON3: $(which python3)
      run: |
        brew update
        brew install cmake ninja
        cmake --version
        ninja --version
        clang --version
        echo "VCPKG_PYTHON3=$VCPKG_PYTHON3" >> $GITHUB_ENV

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup MSVC
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install CMake and Ninja (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install cmake ninja
        cmake --version
        ninja --version

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: '6f29f12e82a8293156836ad81cc9bf5af41fe836'
        vcpkgJsonGlob: '**/vcpkg.json'

    - name: Configure CMake
      run: |
        cmake -B ${{github.workspace}}/build -G Ninja -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build ${{github.workspace}}/build

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest

    - name: Upload build logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-logs-${{ matrix.os }}
        path: ${{ github.workspace }}/build/CMakeFiles/CMakeError.log
